rm(list = ls())

library(ggplot2)
library(ggthemes)
library(dplyr)
library(tidyr)

system2("rsync",
        c("-avz",
          "hpc:/data/gent/vo/000/gvo00074/felicien/R/outputs/QoF.*.RDS",
        "./outputs/"))

df.QoF <- data.frame()
files <- list.files("./outputs/",
                    "QoF*",
                    full.names = TRUE)

df.QoF <- all.X.test <- all.test <- all.SHAP <- 
  data.frame()

for (ifile in seq(1,length(files))){
  
  cfile <- files[ifile]
  cQoF <- readRDS(cfile)
  
  df.QoF <- bind_rows(df.QoF,
                      cQoF %>%
                        mutate(lon = as.numeric(sub("\\_.*", "", lon_lat)),
                               lat = as.numeric(sub(".*\\_", "", lon_lat))))
  
}

world <- rnaturalearth::ne_countries(scale = "medium", returnclass = "sf")

ggplot(data = df.QoF %>%
         filter(model == "CABLE-POP")) +
  geom_raster(aes(x = lon, y = lat,
                  fill = mean.y)) +
  geom_sf(data = world,fill = NA, color = "grey17") +
  theme_map() 

lons.lats <- df.QoF %>%
  filter(mean.y > 0.1) %>%
  pull(lon_lat)

ggplot(data = df.QoF %>%
         filter(lon_lat %in% lons.lats)) +
  geom_boxplot(aes(x = model,
                   y = mean.y)) +
  theme_bw()


ggplot(data = df.QoF %>%
         filter(model == "CABLE-POP",
                lon_lat %in% lons.lats)) +
  geom_raster(aes(x = lon, y = lat,
                  fill = Rsq)) +
  geom_sf(data = world,fill = NA, color = "grey17") +
  theme_map() 

ggplot(data = df.QoF %>%
         filter(lon_lat %in% lons.lats)) +
  geom_boxplot(aes(x = model, y = Rsq)) +
  theme_bw()

################################################################################

system2("rsync",
        c("-avz",
          "hpc:/data/gent/vo/000/gvo00074/felicien/R/outputs/All.test.XGBoosts.*.RDS",
          "./outputs/"))

df.test <- data.frame()
files <- list.files("./outputs/",
                    "All.test.XGBoosts.*",
                    full.names = TRUE)

for (ifile in seq(1,length(files))){
  
  cfile <- files[ifile]
  cTest <- readRDS(cfile)
  
  df.test <- bind_rows(df.test,
                       cTest %>%
                        mutate(lon = as.numeric(sub("\\_.*", "", lon_lat)),
                               lat = as.numeric(sub(".*\\_", "", lon_lat))))
  
}

ggplot(data = df.test %>%
         filter(lon_lat %in% lons.lats),
       aes(x = pred, y = obs)) +
  geom_hex(aes(fill = stat(log(count)))) +
  stat_smooth(aes(color = model),
              method = "lm", se = FALSE) +
  geom_abline(slope = 1, intercept = 0, color = "black",
              linetype = 2) +
  facet_wrap(~ model) +
  theme_bw()

################################################################################

system2("rsync",
        c("-avz",
          "hpc:/data/gent/vo/000/gvo00074/felicien/R/outputs/All.SHAP.*.RDS",
        "./outputs/"))

df.SHAP <- data.frame()
files <- list.files("./outputs/",
                    "All.SHAP.*",
                    full.names = TRUE)

for (ifile in seq(1,length(files))){
  
  cfile <- files[ifile]
  cSHAP <- readRDS(cfile)
  
  df.SHAP <- bind_rows(df.SHAP,
                       cSHAP %>%
                        mutate(lon = as.numeric(sub("\\_.*", "", lon_lat)),
                               lat = as.numeric(sub(".*\\_", "", lon_lat))))
  
}

df.SHAP.sum <- df.SHAP %>%
  group_by(model,lon,lat,lon_lat,feature) %>%
  summarise(SHAP.m = mean(shap_value,na.rm = TRUE),
            .groups = "keep") %>%
  pivot_wider(names_from = "feature",
              values_from = "SHAP.m") 
df.all.SHAP <- df.SHAP.sum[ , !(names(df.SHAP.sum) %in% c("model", "lon", "lat","lon_lat",
                                                          "S1","S2","S3","S4","max.S")) ]
df.SHAP.sum$max.S <- names(df.all.SHAP)[max.col(abs(df.all.SHAP), ties.method = "first")]

df.SHAP.sum %>%
  group_by(model) %>%
  summarise(N = length(unique(tmp)))

ggplot(data = df.SHAP.sum %>%
         filter(model == "CABLE-POP",
                lon_lat %in% lons.lats)) +
  geom_raster(aes(x = lon, y = lat,
                  fill = max.S),) +
  geom_sf(data = world,fill = NA, color = "grey17") +
  theme_map() 


rm(list = ls())

library(ggplot2)
library(ggthemes)
library(dplyr)
library(tidyr)

system2("rsync",
        c("-avz",
          "hpc:/data/gent/vo/000/gvo00074/felicien/R/outputs/All.QoF.Granger.RDS",
          "./outputs/"))

df.QoF <- readRDS("./outputs/All.QoF.Granger.RDS")

models <- sort(unique(df.QoF$model))
models.lons.lats <- df.QoF %>%
  pull(model_lon_lat)

selected.model <- df.QoF %>%
  group_by(model) %>%
  summarise(N = n()) %>%
  ungroup() %>%
  filter(N == max(N)) %>%
  pull(model)

world <- rnaturalearth::ne_countries(scale = "medium", returnclass = "sf")

ggplot(data = df.QoF) +
  geom_raster(aes(x = lon, y = lat,
                  fill = mean.y)) +
  geom_sf(data = world,fill = NA, color = "grey17") +
  scale_y_continuous(limits = c(-1,1)*23.5) +
  scale_x_continuous(limits = c(-15,60)) +
  facet_wrap(~ model) +
  theme_map() 

ggplot(data = df.QoF) +
  geom_boxplot(aes(x = model,
                   y = mean.y)) +
  theme_bw()


ggplot(data = df.QoF %>%
         filter(model_lon_lat %in% models.lons.lats)) +
  geom_raster(aes(x = lon, y = lat,
                  fill = Rsq)) +
  geom_sf(data = world,fill = NA, color = "grey17") +
  scale_y_continuous(limits = c(-1,1)*23.5) +
  scale_x_continuous(limits = c(-15,60)) +
  facet_wrap(~ model) +
  theme_map() 

ggplot(data = df.QoF %>%
         filter(model_lon_lat %in% models.lons.lats)) +
  geom_boxplot(aes(x = model, y = Rsq)) +
  theme_bw()

################################################################################

system2("rsync",
        c("-avz",
          "hpc:/data/gent/vo/000/gvo00074/felicien/R/outputs/All.test.Granger.RDS",
          "./outputs/"))

df.test <- readRDS("./outputs/All.test.Granger.RDS")


ggplot(data = df.test %>%
         filter(model_lon_lat %in% models.lons.lats),
       aes(x = pred, y = obs)) +
  geom_hex(aes(fill = stat(log(count)))) +
  stat_smooth(aes(color = model),
              method = "lm", se = FALSE) +
  geom_abline(slope = 1, intercept = 0, color = "black",
              linetype = 2) +
  facet_wrap(~ model) +
  coord_equal() +
  theme_bw()

################################################################################

system2("rsync",
        c("-avz",
          "hpc:/data/gent/vo/000/gvo00074/felicien/R/outputs/All.SHAP.Granger.RDS",
          "./outputs/"))

df.SHAP <- readRDS("./outputs/All.SHAP.Granger.RDS") 

df.SHAP.sum <- df.SHAP %>%
  group_by(model,model_lon_lat,lon_lat,lon,lat,cause,target) %>%
  summarise(SHAP.m = sum(mean_shap,na.rm = TRUE),
            .groups = "keep") 

ggplot(data = df.SHAP %>%
         filter(model_lon_lat %in% models.lons.lats) %>%
         group_by(model) %>%
         filter(lon_lat == lon_lat[1])) +
  geom_line(aes(x = lag,
                y = mean_shap,
                color = cause)) +
  facet_wrap(~ model) +
  theme_bw()

df.SHAP.max <- df.SHAP.sum %>%
  group_by(model,model_lon_lat,lon_lat,lon,lat,target) %>%
  arrange(desc(SHAP.m)) %>%
  slice_head(n = 1) 

ggplot(data = df.SHAP.max %>%
         filter(model_lon_lat %in% models.lons.lats)) +
  geom_raster(aes(x = lon, y = lat,
                  fill = cause),) +
  geom_sf(data = world,fill = NA, color = "grey17") +  
  facet_wrap(~ model) +
  scale_y_continuous(limits = c(-1,1)*23.5) +
  scale_x_continuous(limits = c(-15,60)) +
  theme_map() +
  theme(legend.position = "bottom")

df.SHAP.max %>%
  group_by(model) %>%
  summarise(N = length(model_lon_lat),
            .groups = "keep")

df.SHAP.max2 <- df.SHAP.sum %>%
  mutate(cause.cat = case_when(cause %in% c("tmin","tmp","tmax","VPD") ~ "Demand",
                               cause %in% c("pre","top.sml") ~ "Supply",
                               TRUE ~ cause)) %>%
  group_by(model,model_lon_lat,lon_lat,lon,lat,
           cause.cat,target) %>%
  summarise(SHAP.m = sum(SHAP.m,na.rm = TRUE),
            .groups = "keep") %>%
  group_by(model,model_lon_lat,lon_lat,lon,lat,target) %>%
  arrange(desc(SHAP.m)) %>%
  slice_head(n = 1) 

ggplot(data = df.SHAP.max2 %>%
         filter(model_lon_lat %in% models.lons.lats)) +
  geom_raster(aes(x = lon, y = lat,
                  fill = cause.cat),) +
  geom_sf(data = world,fill = NA, color = "grey17") +  
  
  geom_vline(xintercept = seq(-15,60,10)) +
  geom_hline(yintercept = seq(-23,23,10)) +
  facet_wrap(~ model) +
  scale_y_continuous(limits = c(-1,1)*23.5) +
  scale_x_continuous(limits = c(-15,60)) +
  theme_map() +
  theme(legend.position = "bottom")
